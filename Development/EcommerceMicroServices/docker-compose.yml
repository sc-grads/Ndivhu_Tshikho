services:
  frontend-service:
    build:
      context: ./frontend-service
    ports:
      - "8005:8000"
    environment:
      - API_URL=http://localhost:8080  # Corrected here
    volumes:
      - ./frontend-service/app:/app 
      - ./frontend-service/app/static:/app/static 
    networks:
      - app-network

  user-service:
    build:
      context: ./user-service
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=sqlite:////data/ecommerce.db  # Use absolute path for SQLite
    volumes:
      - ./user-service/app:/app  
      - ./data:/data  # Bind mount local 'data' directory to the container's /data directory
    networks:
      - app-network


  product-service:
    build:
      context: ./product-service
    ports:
      - "8002:8000"
    environment:
      - DATABASE_URL=sqlite:////data/ecommerce.db  # Same database reference
      - API_URL=http://localhost:8080  # Corrected here
      - USER_SERVICE_URL=http:user-service:8001
    volumes:
      - ./product-service/app:/app  
      - ./product-service/app/images:/app/images
      - ./data:/data  # Bind mount the 'data' folder for shared database access
    networks:
      - app-network


#  cart-serivice:
#    build:
#      context: ./cart-service
#    ports:
#      - "8003:8000"
#    environment:
#      - DATABASE_URL=sqlite:////data/ecommerce.db  # Same database reference
#      - API_URL=http://localhost:8080  # Corrected here
#      - USER_SERVICE_URL=http:user-service:8001
#    volumes:
#      - ./cart-service/app:/app  
#      - ./data:/data  # Bind mount the 'data' folder for shared database access
#    networks:
#      - app-network


  nginx:
    build:
      context: ./nginx
    ports:
      - "8080:80"
    depends_on:
      - frontend-service
      - user-service
      - product-service
    volumes:
      - ./frontend-service/app/templates:/usr/share/nginx/html  # Serve HTML templates
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf  # Use custom Nginx configuration
      - ./frontend-service/app/static:/usr/share/nginx/html/static  # Serve static files
      - ./product-service/app/images:/usr/share/nginx/html/images
    networks:
      - app-network

volumes:
  data:  # Ensure volume is defined here for better clarity, though it's not strictly necessary with the current setup

networks:
  app-network:
    driver: bridge
