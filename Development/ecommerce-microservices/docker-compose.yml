services:
  user-service:
    build: ./user-service
    container_name: user_service
    ports:
      - "8001:8000"  # Maps port 8001 of the host to port 8000 of the container
    networks:
      - ecommerce-network
    depends_on:
      - db-service
    environment:
      DATABASE_URL: "postgresql://user:password@db-service:5432/ecommerce"  # Change this line

  product-service:
    build: ./product-service
    container_name: product_service
    ports:
      - "8002:8000"  # Maps port 8002 of the host to port 8000 of the container
    networks:
      - ecommerce-network
    depends_on:
      - db-service
    environment:
      DATABASE_URL: "postgresql://user:password@db-service:5432/ecommerce"  # Change this line

  db-service:
    image: postgres:latest  # Use the official PostgreSQL image
    container_name: db_service
    environment:
      POSTGRES_DB: ecommerce
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password  # Set your own password
    volumes:
      - ecommerce_data:/var/lib/postgresql/data  # Use named volume for persistence
    ports:
      - "5432:5432"  # Expose PostgreSQL port
    networks:
      - ecommerce-network

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"  # Exposes port 80 for HTTP traffic
    networks:
      - ecommerce-network
    depends_on:
      - user-service
      - product-service

volumes:
  ecommerce_data:  # Define the shared named volume for PostgreSQL data

networks:
  ecommerce-network:
    driver: bridge
