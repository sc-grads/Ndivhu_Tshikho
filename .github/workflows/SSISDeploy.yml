name: Deploy SSIS Project

on:
  push:
    branches:
      - main  # Or any other branch you want to trigger the workflow on

jobs:
  deploy:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'  # or any other valid version like '5.0.*' or '3.1.x'

    - name: Run PowerShell script
      shell: 'cmd'
      run: |
        # Variables
        $SSISNamespace = "Microsoft.SqlServer.Management.IntegrationServices"
        $TargetServerName = "DESKTOP-PL72RR2"
        $TargetFolderName = "Data Flow Task"
        $ProjectFilePath = "$env:GITHUB_WORKSPACE/DatabaseAdministration/SSIS/Data Flow Task/bin/Development/Data Flow Task.ispac"
        $ProjectName = "Data Flow Task"

        # Get installation directory of SQL Server Management Studio from the registry
        $ssmsPath = Get-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\*" | 
                    Where-Object { $_.DisplayName -eq "Microsoft SQL Server Management Studio" } | 
                    Select-Object -ExpandProperty InstallLocation

        if (-not $ssmsPath) {
            Write-Error "SQL Server Management Studio is not installed."
            exit 1
        }

        # Construct path to the DLL file dynamically
        $dllPath = Join-Path -Path $ssmsPath -ChildPath "Common7\IDE\CommonExtensions\Microsoft\SSIS\160\Binn\150References\SMO\Microsoft.SqlServer.Dmf.Common.dll"

        # Load the IntegrationServices assembly
        Add-Type -Path $dllPath

        # Create a connection to the server
        $sqlConnectionString = "Data Source=" + $TargetServerName + ";Initial Catalog=master;Integrated Security=SSPI;"
        $sqlConnection = New-Object System.Data.SqlClient.SqlConnection $sqlConnectionString

        # Create the Integration Services object
        $integrationServices = New-Object $SSISNamespace".IntegrationServices" $sqlConnection

        # Get the Integration Services catalog
        $catalog = $integrationServices.Catalogs["SSISDB"]

        # Create the target folder
        $folder = New-Object $SSISNamespace".CatalogFolder" ($catalog, $TargetFolderName, "Folder description")
        $folder.Create()

        Write-Host "Deploying " $ProjectName " project ..."

        # Read the project file and deploy it
        [byte[]] $projectFile = [System.IO.File]::ReadAllBytes($ProjectFilePath)
        $folder.DeployProject($ProjectName, $projectFile)

        Write-Host "Done."
