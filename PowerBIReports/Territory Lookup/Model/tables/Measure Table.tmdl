table 'Measure Table'

	measure 'Quantity Sold' =
			
			SUM(
			    'Sales Data'[OrderQuantity]
			)
		formatString: #,0

	measure 'Quantity Returned' =
			
			sum(
			    'Returns Data'[ReturnQuantity]
			)
		formatString: 0

	measure 'Average Retail Price' =
			
			AVERAGE(
			    'Product Lookup'[ProductPrice]
			)
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'Total Returns' =
			
			COUNT('Returns Data'[ReturnQuantity]
			)
		formatString: 0

	measure 'Total  Orders' =
			
			DISTINCTCOUNT(
			    'Sales Data'[OrderNumber]
			)
		formatString: #,0

	measure 'Total Customers' =
			
			DISTINCTCOUNT(
			    'Sales Data'[CustomerKey]
			    )
		formatString: #,0

	measure 'Return Rate' = ```
			
			DIVIDE(
			    [Quantity Returned],
			    [Quantity Sold],
			    "No Sales"
			)   
			```
		formatString: 0.00%;-0.00%;0.00%

	measure 'Bulk Orders' =
			
			CALCULATE(
			    [Total  Orders],
			    'Sales Data'[OrderQuantity] > 1
			)
		formatString: #,0

	measure 'Weekend Orders' =
			
			CALCULATE(
			    [Total  Orders],
			    'Calendar Lookup'[Weekend] = "Weekend"
			)
		formatString: #,0

	measure 'Bike Returns' =
			
			CALCULATE(
			    [Total Returns],
			    'Product Categories Lookup'[CategoryName] = "Bikes"
			    )
		formatString: #,0

	measure 'Bike Sales' =
			
			CALCULATE(
			    [Quantity Sold],
			    'Product Categories Lookup'[CategoryName] = "Bikes"
			)
		formatString: #,0

	measure 'Bike Return Rate' =
			
			CALCULATE(
			    [Return Rate],
			    'Product Categories Lookup'[CategoryName] = "Bikes"
			)
		formatString: #,0.00%;-#,0.00%;#,0.00%

	measure 'All Orders' =
			
			CALCULATE(
			    [Total  Orders],
			    ALL(
			        'Sales Data'
			    )
			)
		formatString: #,0

	measure '% of All Orders' =
			
			DIVIDE(
			    [Total  Orders],
			    [All Orders]
			)
		formatString: 0.00%;-0.00%;0.00%

	measure 'Overall Average Price' =
			
			CALCULATE(
			    [Average Retail Price],
			    ALL(
			        'Product Lookup'
			        )
			)

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'All Returns' =
			
			CALCULATE(
			    [Total Returns],
			    ALL(
			        'Returns Data'
			    )
			)
		formatString: 0

	measure '% of All Returns' =
			
			DIVIDE(
			    [Total  Orders],
			    [All Returns]
			)
		formatString: #,0.00%;-#,0.00%;#,0.00%

	measure 'High Ticket Orders' =
			
			CALCULATE(
			    [Total  Orders],
			    FILTER(
			        'Product Lookup',
			        'Product Lookup'[ProductPrice] > [Overall Average Price]
			    )
			)
		formatString: #,0

	measure 'Total Revenue' = ```
			
			SUMX(
			    'Sales Data',
			    'Sales Data'[OrderQuantity] * 
			    RELATED(
			        'Product Lookup'[ProductPrice]
			    )
			)
			
			```
		formatString: \$#,0;(\$#,0);\$#,0

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'Average Revenue per Customer' =
			
			DIVIDE(
			    [Total Revenue],
			    [Total Customers]
			)
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'Total Cost' =
			
			SUMX(
			    'Sales Data',
			    'Sales Data'[OrderQuantity]*
			    RELATED(
			        'Product Lookup'[ProductCost]
			    )
			)
		formatString: \$#,0;(\$#,0);\$#,0

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'Total Profit' =
			
			[Total Revenue] - [Total Cost]
		formatString: \$#,0;(\$#,0);\$#,0

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'YTD Revenue' =
			
			CALCULATE(
			    [Total Revenue],
			    DATESYTD(
			        'Calendar Lookup'[Date]
			        )
			)
		formatString: \$#,0;(\$#,0);\$#,0

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'Previous Month Revenue' =
			
			CALCULATE(
			    [Total Revenue],
			    DATEADD(
			        'Calendar Lookup'[Date],
			        -1,
			        MONTH
			        )
			)
		formatString: \$#,0;(\$#,0);\$#,0

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'Revenue Target' =
			
			[Previous Month Revenue]*1.1
		formatString: \$#,0;(\$#,0);\$#,0

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure '90-day Rolling in Profit' =
			
			CALCULATE(
			    [Total Profit],
			    DATESINPERIOD(
			        'Calendar Lookup'[Date],
			        MAX(
			            'Calendar Lookup'[Date]
			        ),
			        -90,
			        DAY
			    )
			)
		formatString: \$#,0;(\$#,0);\$#,0

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'Previous Month Returns' =
			
			CALCULATE(
			    [Total Returns],
			    DATEADD(
			        'Calendar Lookup'[Date],
			        -1,
			        MONTH
			    )
			)
		formatString: #,0

	measure 'Previous Month Profit' = ```
			
			CALCULATE(
			    [Total Profit],
			    DATEADD(
			        'Calendar Lookup'[Date],
			        -1,
			        MONTH
			    )
			)
			
			```
		formatString: \$#,0;(\$#,0);\$#,0

	measure 'Order Target' =
			
			[Previous Month Orders]* 1.1

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Profit Target' =
			
			[Previous Month Profit]* 1.1
		formatString: \$#,0;(\$#,0);\$#,0

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'Previous Month Orders' =
			
			CALCULATE(
			    [Total  Orders] ,
			    DATEADD(
			        'Calendar Lookup'[Date],
			        -1,
			        MONTH
			    )
			)
		formatString: #,0

	measure 'Full Name (Customer Detail)' =
			
			IF(
			    HASONEVALUE(
			        'Customer Lookups'[CustomerKey]
			    ),
			    MAX(
			        'Customer Lookups'[Full Name ]
			    ),
			    "Multiple Customers"
			    )

	measure 'Total Orders (Customber Details)' =
			
			IF(
			    HASONEVALUE(
			        'Customer Lookups'[CustomerKey]
			    ),
			    [Total  Orders],
			    "-"
			)
		formatString: 0

	measure 'Total Revenue (Customer Details)' =
			
			IF(
			    HASONEVALUE(
			        'Customer Lookups'[CustomerKey]
			    ),
			    [Total Revenue],
			    "-"
			)

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Order Target Gap' = [Total  Orders] - [Order Target]

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Revenue Target Gap' = [Total Revenue] - [Revenue Target]
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'Profit Target Gap' = [Total Profit] - [Profit Target]
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'Adjusted Revenue' = ```
			
			SUMX(
			    'Sales Data',
			    'Sales Data'[OrderQuantity] * 
			    [Adjusted Price]
			)
			```
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'Adjusted Profit' =
			
			[Adjusted Revenue] - [Total Cost]
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	partition 'Measure Table' = m
		mode: import
		source =
				let
				    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i44FAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"Column1", type text}}),
				    #"Removed Columns" = Table.RemoveColumns(#"Changed Type",{"Column1"})
				in
				    #"Removed Columns"

	annotation PBI_ResultType = Table

